type PersonWorkup implements DynamicFormInterface & Node {
    ID : ID!
    Workup : Workup
    Person: Person
    Description: String
    Details: FormDetails
    Results: WorkupResults
    Procedure: Procedure
    CreatedAt: String
    UpdatedAt:String
    DeletedAt: String
}
input PersonWorkupInput {
    ID : ID
    Description: String
    Results: WorkupResults
    Workup: WorkupInput
    Person: PersonInput
}

scalar WorkupResults

input PersonWorkupFilter {
    Person: PersonFilter
    WorkupId: StringFilter
    CreatedAt: StringFilter
    UpdatedAt: StringFilter
    DeletedAt: StringFilter
}
type PersonWorkupList implements Connection{
    items: [PersonWorkupEdge]
    pagination: Pagination
}

type PersonWorkupEdge implements Edge {
    node: PersonWorkup
    cursor: Pagination
}
extend type Mutation {
    createPersonWorkup(input: PersonWorkupInput!): PersonWorkupEdge
    updatePersonWorkup(input: PersonWorkupInput!): PersonWorkupEdge
    deletePersonWorkup(ID: ID!): ID
}
extend type Query {
    getPersonWorkup(ID: ID!): PersonWorkupEdge
    listPersonWorkups(PersonID: ID!,filter: PersonWorkupFilter,page:Int,limit:Int,sortBy:[String], orderBy:[OrderBy]): Connection
}
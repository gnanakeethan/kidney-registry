type Person {
    ID                     : ID
    FirstName              : String
    LastName               : String
    Address                : String
    DateOfBirth            : String
    Ethnicity              : String
    Phn                    : String
    PrimaryRenalDisease    : String
    Weight                 : Float
    Height                 : Float
    Sex                    : String
    MaritalStatus          : String
    ContactNo              : String
    PersonType             : String
}
type PersonList {
    persons: [Person!]!
    pagination: Pagination
}

input PatientFilter {
    ID                     : ID
    FirstName              : StringFilter
    LastName               : StringFilter
    Address                : StringFilter
    DateOfBirth            : StringFilter
    Ethnicity              : StringFilter
    Phn                    : StringFilter
    PrimaryRenalDisease    : StringFilter
    Weight                 : FloatFilter
    Height                 : FloatFilter
    Sex                    : StringFilter
    MaritalStatus          : StringFilter
    ContactNo              : StringFilter
    PersonType             : StringFilter
    and                    : PatientFilter
    andNot                 : PatientFilter
    or                     : PatientFilter
    orNot                  : PatientFilter
}

extend type Query {
    listPatients(filter: PatientFilter,page:Int,limit:Int) : PersonList
}
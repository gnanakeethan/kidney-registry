type PersonFollowUp {
    ID: String!
    ClinicNo: String
    Description: String
    Person: Person
    Complaints: String
    RenalBiopsies: String
    CaseStatus: String
    DonationId: PersonOrganDonation
}

input PersonFollowUpInput{
    ID: String!
    Person: PersonInput!
    ClinicNo: String
    Description: String
    Complaints: String
    RenalBiopsies: String
    CaseStatus: String
}
extend type Person {
    followUps(filter: PatientFilter,page:Int,limit:Int)              : PersonFollowUpList
}
type PersonFollowUpList {
    followUps: [PersonFollowUp]
    pagination: Pagination
}

extend type Mutation {
    createPersonFollowUp(input: PersonFollowUpInput!): PersonFollowUp
    updatePersonFollowUp(input: PersonFollowUpInput!): PersonFollowUp
    deletePersonFollowUp(ID: ID!): PersonFollowUp
}
extend type Query {
    personFollowUp(ID: ID!): PersonFollowUp
    personFollowUps(PersonID: ID!,filter: PatientFilter,page:Int,limit:Int): PersonFollowUpList
}
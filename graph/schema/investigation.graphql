type Investigation implements DynamicFormInterface & Node {
    ID          : ID!
    Details   : FormDetails
    Procedure : Procedure
    Order: Int
    CreatedAt: String
    UpdatedAt: String
    DeletedAt: String
}
input InvestigationInput{
    ID          : ID!
    Details   : FormDetailsInput
    Procedure : ProcedureInput
    Order: Int
    CreatedAt: String
    UpdatedAt: String
    DeletedAt: String
}

input InvestigationFilter {
    Order: IntFilter
}
type InvestigationList implements Connection {
    items: [InvestigationEdge]
    pagination: Pagination
}

type InvestigationEdge implements Edge {
    node: Investigation
    cursor: Pagination
}
extend type Query {
    getInvestigation(id: ID!): InvestigationEdge
    #    listPersonMedicalHistories(PersonID: ID!,filter: PersonMedicalHistoryFilter,page:Int,limit:Int,sortBy:[String], orderBy:[OrderBy]): PersonMedicalHistoryList
    listInvestigations(filter: InvestigationFilter,page:Int,limit:Int,sortBy:[String], orderBy:[OrderBy]): Connection
}
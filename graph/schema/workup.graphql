type Workup implements Node & DynamicFormInterface{
    ID          : ID!
    Details   : FormDetails
    Procedure : Procedure
    Order: Int
    CreatedAt: String
    UpdatedAt: String
    DeletedAt: String
}
input WorkupInput{
    ID          : ID!
    Details   : FormDetailsInput
    Procedure : ProcedureInput
    Order: Int
    CreatedAt: String
    UpdatedAt: String
    DeletedAt: String
}

input WorkupFilter {
    Order: IntFilter
}
type WorkupList implements Connection{
    items: [WorkupEdge]
    pagination: Pagination
}
type WorkupEdge implements Edge{
    node: Workup
    cursor: Pagination
}

extend type Query {
    getWorkup(id: ID!): WorkupEdge
    #    listPersonMedicalHistories(PersonID: ID!,filter: PersonMedicalHistoryFilter,page:Int,limit:Int,sortBy:[String], orderBy:[OrderBy]): PersonMedicalHistoryList
    listWorkups(filter: WorkupFilter,page:Int,limit:Int,sortBy:[String], orderBy:[OrderBy]): Connection
}